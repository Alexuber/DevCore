{"mappings":"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","sources":["src/js/network-animation.js"],"sourcesContent":["/**\n * Particle Network Animation\n * Inspiration: https://github.com/JulianLaval/canvas-particle-network\n */\n\n(function () {\n  var ParticleNetworkAnimation, PNA;\n  ParticleNetworkAnimation = PNA = function () {};\n\n  PNA.prototype.init = function (element) {\n    this.$el = $(element);\n\n    this.container = element;\n    this.canvas = document.createElement('canvas');\n    this.sizeCanvas();\n    this.container.appendChild(this.canvas);\n    this.ctx = this.canvas.getContext('2d');\n    this.particleNetwork = new ParticleNetwork(this);\n\n    this.bindUiActions();\n\n    return this;\n  };\n\n  PNA.prototype.bindUiActions = function () {\n    $(window).on(\n      'resize',\n      function () {\n        // this.sizeContainer();\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.sizeCanvas();\n        this.particleNetwork.createParticles();\n      }.bind(this)\n    );\n  };\n\n  PNA.prototype.sizeCanvas = function () {\n    this.canvas.width = this.container.offsetWidth;\n    this.canvas.height = this.container.offsetHeight;\n  };\n\n  var Particle = function (parent, x, y) {\n    this.network = parent;\n    this.canvas = parent.canvas;\n    this.ctx = parent.ctx;\n    this.particleColor = returnRandomArrayitem(\n      this.network.options.particleColors\n    );\n    this.radius = getLimitedRandom(1.5, 2.5);\n    this.opacity = 0;\n    this.x = x || Math.random() * this.canvas.width;\n    this.y = y || Math.random() * this.canvas.height;\n    this.velocity = {\n      x: (Math.random() - 0.5) * parent.options.velocity,\n      y: (Math.random() - 0.5) * parent.options.velocity,\n    };\n  };\n\n  Particle.prototype.update = function () {\n    if (this.opacity < 1) {\n      this.opacity += 0.01;\n    } else {\n      this.opacity = 1;\n    }\n    // Change dir if outside map\n    if (this.x > this.canvas.width + 100 || this.x < -100) {\n      this.velocity.x = -this.velocity.x;\n    }\n    if (this.y > this.canvas.height + 100 || this.y < -100) {\n      this.velocity.y = -this.velocity.y;\n    }\n\n    // Update position\n    this.x += this.velocity.x;\n    this.y += this.velocity.y;\n  };\n\n  Particle.prototype.draw = function () {\n    // Draw particle\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.particleColor;\n    this.ctx.globalAlpha = this.opacity;\n    this.ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n  };\n\n  var ParticleNetwork = function (parent) {\n    this.options = {\n      velocity: 1, // the higher the faster\n      density: 15000, // the lower the denser\n      netLineDistance: 200,\n      netLineColor: '#929292',\n      particleColors: ['#aaa'], // ['#6D4E5C', '#aaa', '#FFC458' ]\n    };\n    this.canvas = parent.canvas;\n    this.ctx = parent.ctx;\n\n    this.init();\n  };\n\n  ParticleNetwork.prototype.init = function () {\n    // Create particle objects\n    this.createParticles(true);\n\n    // Update canvas\n    this.animationFrame = requestAnimationFrame(this.update.bind(this));\n\n    this.bindUiActions();\n  };\n\n  ParticleNetwork.prototype.createParticles = function (isInitial) {\n    // Initialise / reset particles\n    var me = this;\n    this.particles = [];\n    var quantity =\n      (this.canvas.width * this.canvas.height) / this.options.density;\n\n    if (isInitial) {\n      var counter = 0;\n      clearInterval(this.createIntervalId);\n      this.createIntervalId = setInterval(\n        function () {\n          if (counter < quantity - 1) {\n            // Create particle object\n            this.particles.push(new Particle(this));\n          } else {\n            clearInterval(me.createIntervalId);\n          }\n          counter++;\n        }.bind(this),\n        250\n      );\n    } else {\n      // Create particle objects\n      for (var i = 0; i < quantity; i++) {\n        this.particles.push(new Particle(this));\n      }\n    }\n  };\n\n  ParticleNetwork.prototype.createInteractionParticle = function () {\n    // Add interaction particle\n    this.interactionParticle = new Particle(this);\n    this.interactionParticle.velocity = {\n      x: 0,\n      y: 0,\n    };\n    this.particles.push(this.interactionParticle);\n    return this.interactionParticle;\n  };\n\n  ParticleNetwork.prototype.removeInteractionParticle = function () {\n    // Find it\n    var index = this.particles.indexOf(this.interactionParticle);\n    if (index > -1) {\n      // Remove it\n      this.interactionParticle = undefined;\n      this.particles.splice(index, 1);\n    }\n  };\n\n  ParticleNetwork.prototype.update = function () {\n    if (this.canvas) {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.globalAlpha = 1;\n\n      // Draw connections\n      for (var i = 0; i < this.particles.length; i++) {\n        for (var j = this.particles.length - 1; j > i; j--) {\n          var distance,\n            p1 = this.particles[i],\n            p2 = this.particles[j];\n\n          // check very simply if the two points are even a candidate for further measurements\n          distance = Math.min(Math.abs(p1.x - p2.x), Math.abs(p1.y - p2.y));\n          if (distance > this.options.netLineDistance) {\n            continue;\n          }\n\n          // the two points seem close enough, now let's measure precisely\n          distance = Math.sqrt(\n            Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2)\n          );\n          if (distance > this.options.netLineDistance) {\n            continue;\n          }\n\n          this.ctx.beginPath();\n          this.ctx.strokeStyle = this.options.netLineColor;\n          this.ctx.globalAlpha =\n            ((this.options.netLineDistance - distance) /\n              this.options.netLineDistance) *\n            p1.opacity *\n            p2.opacity;\n          this.ctx.lineWidth = 0.7;\n          this.ctx.moveTo(p1.x, p1.y);\n          this.ctx.lineTo(p2.x, p2.y);\n          this.ctx.stroke();\n        }\n      }\n\n      // Draw particles\n      for (var i = 0; i < this.particles.length; i++) {\n        this.particles[i].update();\n        this.particles[i].draw();\n      }\n\n      if (this.options.velocity !== 0) {\n        this.animationFrame = requestAnimationFrame(this.update.bind(this));\n      }\n    } else {\n      cancelAnimationFrame(this.animationFrame);\n    }\n  };\n\n  ParticleNetwork.prototype.bindUiActions = function () {\n    // Mouse / touch event handling\n    this.spawnQuantity = 3;\n    this.mouseIsDown = false;\n    this.touchIsMoving = false;\n\n    this.onMouseMove = function (e) {\n      if (!this.interactionParticle) {\n        this.createInteractionParticle();\n      }\n      this.interactionParticle.x = e.offsetX;\n      this.interactionParticle.y = e.offsetY;\n    }.bind(this);\n\n    this.onTouchMove = function (e) {\n      e.preventDefault();\n      this.touchIsMoving = true;\n      if (!this.interactionParticle) {\n        this.createInteractionParticle();\n      }\n      this.interactionParticle.x = e.changedTouches[0].clientX;\n      this.interactionParticle.y = e.changedTouches[0].clientY;\n    }.bind(this);\n\n    this.onMouseDown = function (e) {\n      this.mouseIsDown = true;\n      var counter = 0;\n      var quantity = this.spawnQuantity;\n      var intervalId = setInterval(\n        function () {\n          if (this.mouseIsDown) {\n            if (counter === 1) {\n              quantity = 1;\n            }\n            for (var i = 0; i < quantity; i++) {\n              if (this.interactionParticle) {\n                this.particles.push(\n                  new Particle(\n                    this,\n                    this.interactionParticle.x,\n                    this.interactionParticle.y\n                  )\n                );\n              }\n            }\n          } else {\n            clearInterval(intervalId);\n          }\n          counter++;\n        }.bind(this),\n        50\n      );\n    }.bind(this);\n\n    this.onTouchStart = function (e) {\n      e.preventDefault();\n      setTimeout(\n        function () {\n          if (!this.touchIsMoving) {\n            for (var i = 0; i < this.spawnQuantity; i++) {\n              this.particles.push(\n                new Particle(\n                  this,\n                  e.changedTouches[0].clientX,\n                  e.changedTouches[0].clientY\n                )\n              );\n            }\n          }\n        }.bind(this),\n        200\n      );\n    }.bind(this);\n\n    this.onMouseUp = function (e) {\n      this.mouseIsDown = false;\n    }.bind(this);\n\n    this.onMouseOut = function (e) {\n      this.removeInteractionParticle();\n    }.bind(this);\n\n    this.onTouchEnd = function (e) {\n      e.preventDefault();\n      this.touchIsMoving = false;\n      this.removeInteractionParticle();\n    }.bind(this);\n\n    this.canvas.addEventListener('mousemove', this.onMouseMove);\n    this.canvas.addEventListener('touchmove', this.onTouchMove);\n    this.canvas.addEventListener('mousedown', this.onMouseDown);\n    this.canvas.addEventListener('touchstart', this.onTouchStart);\n    this.canvas.addEventListener('mouseup', this.onMouseUp);\n    this.canvas.addEventListener('mouseout', this.onMouseOut);\n    this.canvas.addEventListener('touchend', this.onTouchEnd);\n  };\n\n  ParticleNetwork.prototype.unbindUiActions = function () {\n    if (this.canvas) {\n      this.canvas.removeEventListener('mousemove', this.onMouseMove);\n      this.canvas.removeEventListener('touchmove', this.onTouchMove);\n      this.canvas.removeEventListener('mousedown', this.onMouseDown);\n      this.canvas.removeEventListener('touchstart', this.onTouchStart);\n      this.canvas.removeEventListener('mouseup', this.onMouseUp);\n      this.canvas.removeEventListener('mouseout', this.onMouseOut);\n      this.canvas.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  var getLimitedRandom = function (min, max, roundToInteger) {\n    var number = Math.random() * (max - min) + min;\n    if (roundToInteger) {\n      number = Math.round(number);\n    }\n    return number;\n  };\n\n  var returnRandomArrayitem = function (array) {\n    return array[Math.floor(Math.random() * array.length)];\n  };\n\n  pna = new ParticleNetworkAnimation();\n  pna.init($('.particle-network-animation')[0]);\n})();\n"],"names":["ParticleNetworkAnimation","PNA","prototype","init","element","this","$el","$","container","canvas","document","createElement","sizeCanvas","appendChild","ctx","getContext","particleNetwork","ParticleNetwork","bindUiActions","window","on","clearRect","width","height","createParticles","bind","offsetWidth","offsetHeight","Particle","parent","x","y","network","particleColor","returnRandomArrayitem","options","particleColors","radius","getLimitedRandom","opacity","Math","random","velocity","update","draw","beginPath","fillStyle","globalAlpha","arc","PI","fill","density","netLineDistance","netLineColor","animationFrame","requestAnimationFrame","isInitial","me","particles","quantity","counter","clearInterval","createIntervalId","setInterval","push","i","createInteractionParticle","interactionParticle","removeInteractionParticle","index","indexOf","undefined","splice","length","j","distance","p1","p2","min","abs","sqrt","pow","strokeStyle","lineWidth","moveTo","lineTo","stroke","cancelAnimationFrame","spawnQuantity","mouseIsDown","touchIsMoving","onMouseMove","e","offsetX","offsetY","onTouchMove","preventDefault","changedTouches","clientX","clientY","onMouseDown","intervalId","onTouchStart","setTimeout","onMouseUp","onMouseOut","onTouchEnd","addEventListener","unbindUiActions","removeEventListener","max","roundToInteger","number","round","array","floor","pna"],"version":3,"file":"index.cdb12eae.js.map"}